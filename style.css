/* The universal selector selects every single element on the page, this is useful when we want a certain property to be applied to all the elements and there is no inheritance involved, this can be used when you want to apply a certain propety that does not automatically get inherited to all the elements. Also this has the lowest priority and we can easily override it */
* {
  /* border-top: 10px solid #1098ad; */
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* properties added under body gets inherited, for e.g. we want color on all the elements but the color gets inherited hence we added under body. */
body {
  color: #444;
  font-family: sans-serif;
  border-top: 10px solid #1098ad;
  position: relative;
}

/* This below declaration block will center the content on the page */
.container {
  width: 1500px;
  /* margin-left: auto;
  margin-right: auto; */
  margin: 0 auto;
  /* position: relative; */
}

.main-header {
  background-color: #f7f7f7;
  padding: 20px 40px;
  margin-bottom: 60px; /* margin-bottom is a good option to add vertical space*/
  height: 80px;
}

aside {
  background-color: #f7f7f7;
  border-top: 5px solid #1098ad;
  border-bottom: 5px solid #1098ad;
  padding: 50px 40px;
}

article {
  margin-bottom: 60px;
}

.post-header {
  margin-bottom: 40px;
}

h1,
h2,
h3 {
  color: #1098ad;
}

h1 {
  font-size: 26px;
  text-transform: uppercase;
  font-style: italic;
}

h2 {
  font-size: 40px;
  margin-bottom: 30px;
}

h3 {
  font-size: 30px;
  margin-bottom: 20px;
  margin-top: 40px; /*The top and bottom margins of blocks are sometimes collapsed into a single margin whose size is the largest of the individual margins (or just one of them, if they are equal), a behavior known as margin collapsing. Note that the margins of floating and absolutely positioned elements never collapse, for e.g. here margin-top: 40px will be considered and margin-bottom: 15px of p element will be ignored */
}

h4 {
  font-size: 20px;
  text-transform: uppercase;
  text-align: center;
  margin-bottom: 30px;
}

p {
  font-size: 22px;
  line-height: 1.5;
  margin-bottom: 15px;
}

ul,
ol {
  margin-left: 50px;
  margin-bottom: 30px;
}

li {
  font-size: 20px;
  margin-bottom: 10px;
}

li:last-child {
  margin-bottom: 0;
}

/* footer p {
  font-size: 16px;
} */

/* article header p {
  font-style: italic;
} */

nav a:link {
  margin-right: 30px;
  margin-top: 10px;
  display: inline-block; /* a is an inline element because of which margin-top will not apply, however when we change the display to inline-block then margin-top will be applied */
}

nav a:link:last-child {
  margin-right: 0;
}

#author {
  font-style: italic;
  font-size: 16px;
  /* display: inline-block; */ /* this will make the p element to appear beside the author image */
}

#copyright {
  font-size: 16px;
}

.related-author {
  font-size: 18px;
  font-weight: bold;
}

.related {
  list-style: none;
  margin-left: 0;
}

li:first-child {
  font-weight: bold;
}

li:last-child {
  font-style: italic;
}

/* when we mix multiple elements inside parent element then this pseudo classes don't work really well */
/* this will be applied only if the last element under article is p */
/* article p:last-child {
  color: palevioletred;
} */

/* this will not work because the first element under article is header and not p */
article p:first-child {
  color: yellowgreen;
}

/* styling links: LVHA (apply this in order), anchor tag is used to create hyperlinks */
/* a:link will target all the anchor elements which have a href attribute (only targets real links) */
a:link {
  color: #1098ad;
  text-decoration: none;
}

a:visited {
  color: #1098ad;
}

a:hover {
  color: orangered;
  font-weight: bold;
  /* text-decoration: underline dotted orangered; */
  text-decoration: underline orangered;
}

a:active {
  background-color: black;
  font-style: italic;
}

/* Resolving conflicts, highest to lowest priority:  !important > inline style > ID selector (#) > class(.) or pseudo class (:) selector > element selector > universal selector */
#copyright {
  color: red;
}

.copyright {
  color: blue;
}

.text {
  color: yellow;
}

footer p {
  color: green;
}

/* img element are inline block elements hence we can add width and height to it and create vertical space using margins whereas we cannot do that for inline elements */
.post-img {
  width: 100%;
  height: auto;
}

button {
  font-size: 22px;
  padding: 20px;
  cursor: pointer;
  position: absolute; /*This will make the element out of normal flow*/
  bottom: 50px; /* The values for top, right, bottom, left are in relation with the viewport (visible area on page) by default, to make it relative to some other element then that element should be position: relative*/
  right: 50px;
}

/* Pseudo-elements don't exist in HTML but we can still select and style in CSS, for e.g. the first letter of a paragraph or the first line of the paragraph */
/* Pseudo-elements are written using :: and Pseudo-classes are written using : */
/* Pseudo-elements can be found in browsers HTML tree but not in our code, CSS will automatically create it and put it under the element selected and then styles can be applied */
h1::first-letter {
  font-style: normal;
  margin-right: 5px;
}

/* Adjacent element or a sibling element is a part of the same parent */
/* Adjacent sibling is the very next element under the same parent element */
/* + is the adjacent sibling selector */
h3 + p::first-line {
  color: palevioletred;
}

h2 {
  /* background-color: aqua; */
  position: relative;
}

/* The ::after pseudo-element creates a pseudo-element that will automatically be the very first child of the selected element */
h2::after {
  content: "TOP"; /* content property is mandatory to be defined, it can be an empty string if no content needs to be displayed */
  background-color: #ffe70e;
  color: #444;
  font-size: 16px;
  font-weight: bold;
  display: inline-block; /* by default, any pseudo-element is an inline element, so to apply box-model normally, the display should be set as inline-block */
  padding: 5px 10px;
  position: absolute; /* the position is relative to h2 */
  right: -25px;
  top: -10px;
}

/* use html validator or div checker to debug HTML code */

/* FLOATS */
.author-img {
  float: left;
  margin-bottom: 20px;
}

.author {
  float: left; /* this will make the p text start after the author-img */
  margin-top: 10px;
  margin-left: 20px;
}

/* Collapsing elements is a phenomenon where the height of the element becomes zero and this happens because the children elements are floated */

h1 {
  float: left;
}

nav {
  float: right;
}

.clear {
  clear: both;
}

.clearfix::after {
  content: "";
  clear: both;
  display: block; /* because clear gets applied on block level elements */
}

article {
  width: 1000px;
  float: left;
}

aside {
  width: 425px;
  float: right;
}

footer {
  clear: both;
}
